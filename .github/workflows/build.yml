name: Build

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: build and release electron app

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, macos-10.15]

    steps:
      # step1：check out repos
      - name: check out git repository
        uses: actions/checkout@v2

      # step2：install node env

      - name: install Node.js
        uses: actions/setup-node@v2-beta

      # step3：npm install

      - name: npm install
        run: |
          npm install

      # step4：build

      - name: build windows app
        if: matrix.os == 'windows-2019'
        run: |
          npm run package:win

      - name: build mac app
        if: matrix.os == 'macos-10.15'
        run: |
          npm run package

      # step5: cleanup artifacts

      - name: cleanup artifacts for windows
        if: matrix.os == 'windows-2019'
        run: |
          npx rimraf "release/build/!(*.exe)"

      - name: cleanup artifacts for mac
        if: matrix.os == 'macos-10.15'
        run: |
          npx rimraf "release/build/!(*.dmg)"

      # step6：upload artifacts

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: release/build

      # step7：create release

      - name: create relasese
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: 'release/build/**'
        env:
          GITHUB_TOKEN: ${{ secrets.UPLOAD_API_KEY }}
